# Multi-Hop Entry Node Configuration
# Role: Entry point for multi-hop chain
# Server: {{ server_id }}

[Interface]
Address = {{ internal_ip }}/24
PrivateKey = {{ wireguard_private_key }}
ListenPort = {{ wireguard_port }}
SaveConfig = false

# DNS configuration for entry node
DNS = {{ dns_servers | join(', ') }}

# Enable IP forwarding for multi-hop
PostUp = sysctl -w net.ipv4.ip_forward=1
PostUp = sysctl -w net.ipv6.conf.all.forwarding=1

# Route traffic to next hop
PostUp = ip route add {{ next_hop_ip }}/32 dev %i
PostUp = iptables -A FORWARD -i %i -o %i -j ACCEPT
PostUp = iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT

# Setup DNS hijacking to enforce DoH
PostUp = iptables -t nat -A PREROUTING -i %i -p udp --dport 53 -j REDIRECT --to-port 5353
PostUp = iptables -t nat -A PREROUTING -i %i -p tcp --dport 53 -j REDIRECT --to-port 5353

# Cleanup on shutdown
PostDown = iptables -D FORWARD -i %i -o %i -j ACCEPT
PostDown = iptables -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
PostDown = iptables -t nat -D PREROUTING -i %i -p udp --dport 53 -j REDIRECT --to-port 5353
PostDown = iptables -t nat -D PREROUTING -i %i -p tcp --dport 53 -j REDIRECT --to-port 5353

# Client peers will be added below
{% for client in clients %}
[Peer]
# Client: {{ client.name }}
PublicKey = {{ client.public_key }}
AllowedIPs = {{ client.ip_address }}/32
{% endfor %}

# Next hop in chain
[Peer]
# Next Hop: {{ next_hop_server }}
PublicKey = {{ next_hop_public_key }}
AllowedIPs = {{ next_hop_subnet }}
Endpoint = {{ next_hop_endpoint }}
PersistentKeepalive = 25